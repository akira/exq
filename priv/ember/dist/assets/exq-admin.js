eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"exq-admin/adapters/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ApplicationAdapter;\n\n    ApplicationAdapter = DS.ActiveModelAdapter.extend({\n      namespace: \"\" + window.exqNamespace + \"api\"\n    });\n\n    __exports__[\"default\"] = ApplicationAdapter;\n  });//# sourceURL=exq-admin/adapters/application.js");

;eval("define(\"exq-admin/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exq-admin/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=exq-admin/app.js");

;eval("define(\"exq-admin/components/ember-chart\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    /* global Chart */\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'canvas\',\n      attributeBindings: [\'width\', \'height\'],\n\n      renderChart: function(){\n        var context = this.get(\'element\').getContext(\'2d\');\n        var data = this.get(\'data\');\n        var type = this.get(\'type\').classify();\n        var options = Ember.merge({}, this.get(\'options\'));\n\n        var chart = new Chart(context)[type](data, options);\n        \n        if (this.get(\'legend\')) {\n          var legend = chart.generateLegend();\n          this.$().parent().append(legend);\n        };\n\n        this.set(\'chart\', chart);\n      }.on(\'didInsertElement\'),\n\n      destroyChart: function(){\n        this.get(\'chart\').destroy();\n      }.on(\'willDestroyElement\'),\n\n      updateChart: function(){\n        this.destroyChart();\n        this.renderChart();\n      }.observes(\'data\', \'options\')\n    });\n  });//# sourceURL=exq-admin/components/ember-chart.js");

;eval("define(\"exq-admin/components/exq-stat\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ExqStat;\n\n    ExqStat = Ember.Component.extend({\n      link: \"index\",\n      classNames: [\'col-xs-3\']\n    });\n\n    __exports__[\"default\"] = ExqStat;\n  });//# sourceURL=exq-admin/components/exq-stat.js");

;eval("define(\"exq-admin/components/exq-stats\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ExqStats;\n\n    ExqStats = Ember.Component.extend({\n      classNames: [\'row\', \'stats\']\n    });\n\n    __exports__[\"default\"] = ExqStats;\n  });//# sourceURL=exq-admin/components/exq-stats.js");

;eval("define(\"exq-admin/controllers/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ApplicationController;\n\n    ApplicationController = Ember.Controller.extend();\n\n    __exports__[\"default\"] = ApplicationController;\n  });//# sourceURL=exq-admin/controllers/application.js");

;eval("define(\"exq-admin/controllers/failures/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexController;\n\n    IndexController = Ember.Controller.extend({\n      actions: {\n        clearFailures: function() {\n          var self;\n          self = this;\n          return jQuery.ajax({\n            url: \"\" + window.exqNamespace + \"api/failures\",\n            type: \"DELETE\"\n          }).done(function() {\n            self.store.all(\'failure\').forEach(function(f) {\n              return f.deleteRecord();\n            });\n            return self.send(\'reloadStats\');\n          });\n        },\n        removeFailure: function(failure) {\n          var self;\n          self = this;\n          failure.deleteRecord();\n          return failure.save().then(function(f) {\n            return self.send(\'reloadStats\');\n          });\n        }\n      }\n    });\n\n    __exports__[\"default\"] = IndexController;\n  });//# sourceURL=exq-admin/controllers/failures/index.js");

;eval("define(\"exq-admin/controllers/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexController;\n\n    IndexController = Ember.Controller.extend({\n      date: null,\n      chartOptions: {\n        bezierCurve: false,\n        animation: false,\n        scaleShowLabels: true,\n        showTooltips: true,\n        responsive: true,\n        pointDot: false,\n        pointHitDetectionRadius: 2\n      },\n      dashboard_data: {},\n      graph_dashboard_data: (function() {\n        var d, dt, f, failure_set, failures, key, labels, mydates, rtdata, s, success_set, successes, t, _i, _j, _len;\n        if (this.get(\'date\') !== null) {\n          d = moment.utc(this.get(\'date\'));\n          labels = [];\n          mydates = [];\n          for (t = _i = 0; _i < 60; t = ++_i) {\n            labels.push(\"\");\n            mydates.push(moment.utc(d.valueOf() - (t * 1000)));\n          }\n          rtdata = this.store.all(\'realtime\');\n          success_set = [];\n          failure_set = [];\n          for (_j = 0, _len = mydates.length; _j < _len; _j++) {\n            dt = mydates[_j];\n            key = dt.format(\"YYYY-MM-DD HH:mm:ss ZZ\");\n            successes = rtdata.filterBy(\"id\", \"s\" + key);\n            failures = rtdata.filterBy(\"id\", \"f\" + key);\n            s = 0;\n            if (successes.length > 0) {\n              s = successes[0].get(\'count\');\n            }\n            f = 0;\n            if (failures.length > 0) {\n              f = failures[0].get(\'count\');\n            }\n            success_set.push(s);\n            failure_set.push(f);\n          }\n          return {\n            labels: labels,\n            datasets: [\n              {\n                label: \"Failures\",\n                fillColor: \"rgba(255,255,255,0)\",\n                strokeColor: \"rgba(151,187,205,1)\",\n                pointColor: \"rgba(151,187,205,1)\",\n                pointStrokeColor: \"#fff\",\n                pointHighlightFill: \"#fff\",\n                pointHighlightStroke: \"rgba(151,187,205,1)\",\n                data: success_set.reverse()\n              }, {\n                label: \"Sucesses\",\n                fillColor: \"rgba(255,255,255,0)\",\n                strokeColor: \"rgba(238,77,77,1)\",\n                pointColor: \"rgba(238,77,77,1)\",\n                pointStrokeColor: \"#fff\",\n                pointHighlightFill: \"#fff\",\n                pointHighlightStroke: \"rgba(238,77,77,1)\",\n                data: failure_set.reverse()\n              }\n            ]\n          };\n        } else {\n          return {\n            labels: [],\n            datasets: [\n              {\n                data: []\n              }\n            ]\n          };\n        }\n      }).property(\'dashboard_data\', \'date\')\n    });\n\n    __exports__[\"default\"] = IndexController;\n  });//# sourceURL=exq-admin/controllers/index.js");

;eval("define(\"exq-admin/controllers/processes/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexController;\n\n    IndexController = Ember.Controller.extend({\n      actions: {\n        clearProcesses: function() {\n          var self;\n          self = this;\n          return jQuery.ajax({\n            url: \"\" + window.exqNamespace + \"api/processes\",\n            type: \"DELETE\"\n          }).done(function() {\n            return self.store.all(\'process\').forEach(function(p) {\n              p.deleteRecord();\n              return self.send(\'reloadStats\');\n            });\n          });\n        }\n      }\n    });\n\n    __exports__[\"default\"] = IndexController;\n  });//# sourceURL=exq-admin/controllers/processes/index.js");

;eval("define(\"exq-admin/controllers/queues/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexController;\n\n    IndexController = Ember.Controller.extend({\n      actions: {\n        clearAll: function() {\n          return alert(\'clearAll\');\n        },\n        deleteQueue: function(queue) {\n          if (confirm(\"Are you sure you want to delete \" + queue.id + \" and all its jobs?\")) {\n            queue.deleteRecord();\n            return queue.save().then(function(q) {\n              return this.send(\'reloadStats\');\n            });\n          }\n        }\n      }\n    });\n\n    __exports__[\"default\"] = IndexController;\n  });//# sourceURL=exq-admin/controllers/queues/index.js");

;eval("define(\"exq-admin/initializers/simple-auth\", \n  [\"simple-auth/configuration\",\"simple-auth/setup\",\"exq-admin/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Configuration = __dependency1__[\"default\"];\n    var setup = __dependency2__[\"default\"];\n    var ENV = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name:       \'simple-auth\',\n      initialize: function(container, application) {\n        Configuration.load(container, ENV[\'simple-auth\'] || {});\n        setup(container, application);\n      }\n    };\n  });//# sourceURL=exq-admin/initializers/simple-auth.js");

;eval("define(\"exq-admin/models/failure\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Failure;\n\n    Failure = DS.Model.extend({\n      queue: DS.attr(\'string\'),\n      \"class\": DS.attr(\'string\'),\n      args: DS.attr(\'string\'),\n      failed_at: DS.attr(\'date\')\n    });\n\n    __exports__[\"default\"] = Failure;\n  });//# sourceURL=exq-admin/models/failure.js");

;eval("define(\"exq-admin/models/job\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Job;\n\n    Job = DS.Model.extend({\n      queue: DS.attr(\'string\'),\n      \"class\": DS.attr(\'string\'),\n      args: DS.attr(\'string\'),\n      enqueued_at: DS.attr(\'date\'),\n      started_at: DS.attr(\'date\')\n    });\n\n    __exports__[\"default\"] = Job;\n  });//# sourceURL=exq-admin/models/job.js");

;eval("define(\"exq-admin/models/process\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Process;\n\n    Process = DS.Model.extend({\n      pid: DS.attr(\'string\'),\n      host: DS.attr(\'string\'),\n      job: DS.belongsTo(\'job\'),\n      started_at: DS.attr(\'date\')\n    });\n\n    __exports__[\"default\"] = Process;\n  });//# sourceURL=exq-admin/models/process.js");

;eval("define(\"exq-admin/models/queue\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Queue;\n\n    Queue = DS.Model.extend({\n      size: DS.attr(\'number\'),\n      jobs: DS.hasMany(\'job\'),\n      partial: true\n    });\n\n    __exports__[\"default\"] = Queue;\n  });//# sourceURL=exq-admin/models/queue.js");

;eval("define(\"exq-admin/models/realtime\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Realtime;\n\n    Realtime = DS.Model.extend({\n      timestamp: DS.attr(\'date\'),\n      count: DS.attr(\'number\')\n    });\n\n    __exports__[\"default\"] = Realtime;\n  });//# sourceURL=exq-admin/models/realtime.js");

;eval("define(\"exq-admin/models/stat\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Stat;\n\n    Stat = DS.Model.extend({\n      processed: DS.attr(\'number\'),\n      failed: DS.attr(\'number\'),\n      busy: DS.attr(\'number\'),\n      enqueued: DS.attr(\'number\'),\n      date: DS.attr(\'date\')\n    });\n\n    __exports__[\"default\"] = Stat;\n  });//# sourceURL=exq-admin/models/stat.js");

;eval("define(\"exq-admin/router\", \n  [\"ember\",\"exq-admin/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'index\', {\n        path: \'/\'\n      });\n      this.resource(\'queues\', function() {\n        return this.route(\'show\', {\n          path: \'/:id\'\n        });\n      });\n      this.resource(\'processes\', function() {\n        return this.route(\'index\', {\n          path: \'/\'\n        });\n      });\n      return this.resource(\'failures\', function() {\n        return this.route(\'index\', {\n          path: \'/\'\n        });\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=exq-admin/router.js");

;eval("define(\"exq-admin/routes/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ApplicationRoute;\n\n    ApplicationRoute = Ember.Route.extend({\n      model: function(params) {\n        return this.get(\'store\').find(\'stat\', \'all\');\n      },\n      actions: {\n        reloadStats: function() {\n          return this.get(\'store\').find(\'stat\', \'all\').then(function(stats) {\n            return stats.reload();\n          });\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ApplicationRoute;\n  });//# sourceURL=exq-admin/routes/application.js");

;eval("define(\"exq-admin/routes/failures/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      model: function(params) {\n        return this.store.find(\'failure\');\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=exq-admin/routes/failures/index.js");

;eval("define(\"exq-admin/routes/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      timeout: null,\n      setupController: function(controller, model) {\n        var self, updater;\n        this._super(controller, model);\n        self = this;\n        updater = window.setInterval(function() {\n          return self.store.find(\'realtime\').then(function(data) {\n            controller.set(\'dashboard_data\', data);\n            return controller.set(\'date\', new Date());\n          });\n        }, 2000);\n        return this.set(\'timeout\', updater);\n      },\n      deactivate: function() {\n        clearInterval(this.get(\'timeout\'));\n        return this.set(\'timeout\', null);\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=exq-admin/routes/index.js");

;eval("define(\"exq-admin/routes/processes/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      model: function(params) {\n        return this.store.find(\'process\');\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=exq-admin/routes/processes/index.js");

;eval("define(\"exq-admin/routes/queues/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var IndexRoute;\n\n    IndexRoute = Ember.Route.extend({\n      model: function(params) {\n        return this.store.find(\'queue\');\n      }\n    });\n\n    __exports__[\"default\"] = IndexRoute;\n  });//# sourceURL=exq-admin/routes/queues/index.js");

;eval("define(\"exq-admin/routes/queues/show\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var ShowRoute;\n\n    ShowRoute = Ember.Route.extend({\n      model: function(params) {\n        return this.store.find(\'queue\', params.id).then(function(myModel) {\n          if (myModel.get(\'partial\')) {\n            return myModel.reload();\n          }\n        });\n      }\n    });\n\n    __exports__[\"default\"] = ShowRoute;\n  });//# sourceURL=exq-admin/routes/queues/show.js");

;eval("define(\"exq-admin/templates/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"exq-navbar\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<div class=\\\"container\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'exq-stats\'] || (depth0 && depth0[\'exq-stats\']),options={hash:{\n        \'stats\': (\"model\")\n      },hashTypes:{\'stats\': \"ID\"},hashContexts:{\'stats\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"exq-stats\", options))));\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/application.js");

;eval("define(\"exq-admin/templates/components/exq-navbar\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Exq\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Dashboard\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"Workers\");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"Queues\");\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"Failures\");\n      }\n\n      data.buffer.push(\"<nav role=\\\"navigation\\\" class=\\\"navbar navbar-default\\\"><div class=\\\"container\\\"><div class=\\\"navbar-header\\\"><button data-target=\\\"#bs-example-navbar-collapse-1\\\" data-toggle=\\\"collapse\\\" type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\"><span class=\\\"sr-only\\\">Toggle navigation</span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span><span class=\\\"icon-bar\\\"></span></button>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div><div id=\\\"bs-example-navbar-collapse-1\\\" class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li><li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"processes.index\", options) : helperMissing.call(depth0, \"link-to\", \"processes.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li><li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"queues.index\", options) : helperMissing.call(depth0, \"link-to\", \"queues.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li><li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"failures.index\", options) : helperMissing.call(depth0, \"link-to\", \"failures.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li></ul></div></div></nav>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/components/exq-navbar.js");

;eval("define(\"exq-admin/templates/components/exq-stat\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<div class=\\\"count\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"stat\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"link\", options) : helperMissing.call(depth0, \"link-to\", \"link\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=exq-admin/templates/components/exq-stat.js");

;eval("define(\"exq-admin/templates/components/exq-stats\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'exq-stat\'] || (depth0 && depth0[\'exq-stat\']),options={hash:{\n        \'title\': (\"Processed\"),\n        \'stat\': (\"stats.processed\")\n      },hashTypes:{\'title\': \"STRING\",\'stat\': \"ID\"},hashContexts:{\'title\': depth0,\'stat\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"exq-stat\", options))));\n      data.buffer.push(escapeExpression((helper = helpers[\'exq-stat\'] || (depth0 && depth0[\'exq-stat\']),options={hash:{\n        \'title\': (\"Failed\"),\n        \'stat\': (\"stats.failed\"),\n        \'link\': (\"failures.index\")\n      },hashTypes:{\'title\': \"STRING\",\'stat\': \"ID\",\'link\': \"STRING\"},hashContexts:{\'title\': depth0,\'stat\': depth0,\'link\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"exq-stat\", options))));\n      data.buffer.push(escapeExpression((helper = helpers[\'exq-stat\'] || (depth0 && depth0[\'exq-stat\']),options={hash:{\n        \'title\': (\"Busy\"),\n        \'stat\': (\"stats.busy\"),\n        \'link\': (\"processes.index\")\n      },hashTypes:{\'title\': \"STRING\",\'stat\': \"ID\",\'link\': \"STRING\"},hashContexts:{\'title\': depth0,\'stat\': depth0,\'link\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"exq-stat\", options))));\n      data.buffer.push(escapeExpression((helper = helpers[\'exq-stat\'] || (depth0 && depth0[\'exq-stat\']),options={hash:{\n        \'title\': (\"Enqueued\"),\n        \'stat\': (\"stats.enqueued\"),\n        \'link\': (\"queues.index\")\n      },hashTypes:{\'title\': \"STRING\",\'stat\': \"ID\",\'link\': \"STRING\"},hashContexts:{\'title\': depth0,\'stat\': depth0,\'link\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"exq-stat\", options))));\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/components/exq-stats.js");

;eval("define(\"exq-admin/templates/failures/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<tr><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"failure.queue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"failure.class\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"failure.args\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"failure.failed_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td><button class=\\\"btn btn-danger btn-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFailure\", \"failure\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Delete</button></td></tr>\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Failures</h2><table class=\\\"table table-bordered table-hover\\\"><thead><tr><th>Queue</th><th>Class</th><th>Args</th><th>Failed At</th><th>Actions</th></tr></thead><tbody>\");\n      stack1 = helpers.each.call(depth0, \"failure\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</tbody><tfoot><tr><td colspan=\\\"5\\\"><button class=\\\"btn btn-danger btn-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearFailures\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Clear Failed Jobs List</button></td></tr></tfoot></table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/failures/index.js");

;eval("define(\"exq-admin/templates/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2>Dashboard</h2>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'ember-chart\'] || (depth0 && depth0[\'ember-chart\']),options={hash:{\n        \'type\': (\"Line\"),\n        \'data\': (\"graph_dashboard_data\"),\n        \'options\': (\"chartOptions\"),\n        \'width\': (1170),\n        \'height\': (300),\n        \'legend\': (false)\n      },hashTypes:{\'type\': \"STRING\",\'data\': \"ID\",\'options\': \"ID\",\'width\': \"INTEGER\",\'height\': \"INTEGER\",\'legend\': \"BOOLEAN\"},hashContexts:{\'type\': depth0,\'data\': depth0,\'options\': depth0,\'width\': depth0,\'height\': depth0,\'legend\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"ember-chart\", options))));\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/index.js");

;eval("define(\"exq-admin/templates/processes/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<tr><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.host\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\":\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.pid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.job.queue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.job.class\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.job.args\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"process.started_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td></tr>\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Workers</h2><table class=\\\"table table-bordered table-hover\\\"><thead><tr><th>Worker</th><th>Queue</th><th>Class</th><th>Arguments</th><th>Started</th></tr></thead><tbody>\");\n      stack1 = helpers.each.call(depth0, \"process\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</tbody><tfoot><tr><td colspan=\\\"5\\\"><button class=\\\"btn btn-danger btn-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearProcesses\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Clear worker list</button></td></tr></tfoot></table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/processes/index.js");

;eval("define(\"exq-admin/templates/queues/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"<tr><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"queue.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"queues.show\", \"queue.id\", options) : helperMissing.call(depth0, \"link-to\", \"queues.show\", \"queue.id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td><button class=\\\"btn btn-danger btn-xs\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteQueue\", \"queue\", {hash:{\n        \'on\': (\"click\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">Delete</button></td></tr>\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"queue.size\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Queues</h2><table class=\\\"table table-bordered table-hover\\\"><thead><tr><th>Queue</th><th>Size</th><th>Actions</th></tr></thead><tbody>\");\n      stack1 = helpers.each.call(depth0, \"queue\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</tbody></table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/queues/index.js");

;eval("define(\"exq-admin/templates/queues/show\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<tr><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.class\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.args\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.enqueued_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td><td><button class=\\\"btn btn-danger btn-xs\\\">Delete</button></td></tr>\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\';\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Queue:  \");\n      stack1 = helpers._triageMustache.call(depth0, \"model.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h2><table class=\\\"table table-bordered table-hover\\\"><thead><tr><th>Class</th><th>Args</th><th>Enqueued At</th><th>Actions</th></tr></thead><tbody>\");\n      stack1 = helpers.each.call(depth0, \"job\", \"in\", \"model.jobs\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</tbody></table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=exq-admin/templates/queues/show.js");

;eval("define(\"exq-admin/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=exq-admin/tests/app.jshint.js");

;eval("define(\"exq-admin/tests/exq-admin/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - exq-admin/tests/helpers\');\n    test(\'exq-admin/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'exq-admin/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=exq-admin/tests/exq-admin/tests/helpers/resolver.jshint.js");

;eval("define(\"exq-admin/tests/exq-admin/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - exq-admin/tests/helpers\');\n    test(\'exq-admin/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'exq-admin/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=exq-admin/tests/exq-admin/tests/helpers/start-app.jshint.js");

;eval("define(\"exq-admin/tests/exq-admin/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - exq-admin/tests\');\n    test(\'exq-admin/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'exq-admin/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=exq-admin/tests/exq-admin/tests/test-helper.jshint.js");

;eval("define(\"exq-admin/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exq-admin/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=exq-admin/tests/helpers/resolver.js");

;eval("define(\"exq-admin/tests/helpers/start-app\", \n  [\"ember\",\"exq-admin/app\",\"exq-admin/router\",\"exq-admin/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=exq-admin/tests/helpers/start-app.js");

;eval("define(\"exq-admin/tests/test-helper\", \n  [\"exq-admin/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=exq-admin/tests/test-helper.js");

/* jshint ignore:start */

define('exq-admin/config/environment', ['ember'], function(Ember) {
  var metaName = 'exq-admin/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
});

if (runningTests) {
  require('exq-admin/tests/test-helper');
} else {
  require('exq-admin/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
